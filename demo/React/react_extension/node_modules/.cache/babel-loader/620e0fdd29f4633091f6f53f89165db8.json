{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\FR\\\\Desktop\\\\react_extension\\\\src\\\\components\\\\3_hooks\\\\index.jsx\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom'; //类式组件\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Demo extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      count: 0\n    };\n\n    this.increment = () => {\n      //函数式setState\n      this.setState(state => {\n        return {\n          count: state.count + 1\n        };\n      });\n    };\n\n    this.unMount = () => {\n      ReactDOM.unmountComponentAtNode(document.getElementById('root'));\n    };\n  }\n\n  componentDidMount() {\n    setInterval(() => {\n      this.setState(state => ({\n        count: state.count + 1\n      }));\n    }, 1000);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"\\u5F53\\u524D\\u6C42\\u548C\\u4E3A\\uFF1A\", this.state.count, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.increment,\n        children: \"\\u70B9\\u6211\\u52A01\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.unMount,\n        children: \"\\u5378\\u8F7D\\u7EC4\\u4EF6\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this);\n  }\n\n} //函数式组件\n\n/* function Demo(){\r\n    //Demo多次执行\r\n    const [count,setCount] = React.useState(0) //初始化只做一次\r\n\r\n    //加的回调\r\n    const increment = () => {\r\n        //setCount(count+1) //参数为非函数值\r\n        setCount(count =>  count+1)\r\n        \r\n    }\r\n   \r\n    React.useEffect(() => {\r\n        setInterval(() => {\r\n            setCount(count =>  count+1)\r\n        },1000)\r\n  \r\n    },[])\r\n    return (\r\n        <div>\r\n            <h1>当前求和为：{count} </h1>\r\n            <button onClick ={increment} >点我加1</button>\r\n            <button onClick={unMount}>卸载组件</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Demo \r\n */","map":{"version":3,"sources":["C:/Users/FR/Desktop/react_extension/src/components/3_hooks/index.jsx"],"names":["React","Component","ReactDOM","Demo","state","count","increment","setState","unMount","unmountComponentAtNode","document","getElementById","componentDidMount","setInterval","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CAEA;;;AACC,eAAe,MAAMC,IAAN,SAAmBF,SAAnB,CAA6B;AAAA;AAAA;AAAA,SACzCG,KADyC,GACjC;AAACC,MAAAA,KAAK,EAAC;AAAP,KADiC;;AAAA,SAEzCC,SAFyC,GAE5B,MAAM;AACf;AACA,WAAKC,QAAL,CAAeH,KAAD,IAAW;AAErB,eAAO;AAACC,UAAAA,KAAK,EAACD,KAAK,CAACC,KAAN,GAAY;AAAnB,SAAP;AAEH,OAJD;AAKC,KAToC;;AAAA,SAerCG,OAfqC,GAe3B,MAAM;AACZN,MAAAA,QAAQ,CAACO,sBAAT,CAAgCC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAhC;AACH,KAjBoC;AAAA;;AAUrCC,EAAAA,iBAAiB,GAAE;AACfC,IAAAA,WAAW,CAAC,MAAM;AACd,WAAKN,QAAL,CAAcH,KAAK,KAAI;AAACC,QAAAA,KAAK,EAACD,KAAK,CAACC,KAAN,GAAY;AAAnB,OAAJ,CAAnB;AACH,KAFU,EAET,IAFS,CAAX;AAGH;;AAMLS,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI;AAAA,2DAAW,KAAKV,KAAL,CAAWC,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,OAAO,EAAG,KAAKC,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAQ,QAAA,OAAO,EAAE,KAAKE,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH;;AA5BwC,C,CAgC7C;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\n//类式组件\r\n export default class Demo extends Component {\r\n    state = {count:0}\r\n    increment  = () => {\r\n        //函数式setState\r\n        this.setState((state) => {\r\n            \r\n            return {count:state.count+1}\r\n\r\n        })\r\n        }\r\n        componentDidMount(){\r\n            setInterval(() => {\r\n                this.setState(state =>({count:state.count+1}))\r\n            },1000)\r\n        }\r\n        unMount = () => {\r\n            ReactDOM.unmountComponentAtNode(document.getElementById('root'))\r\n        }\r\n\r\n        com\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>当前求和为：{this.state.count} </h1>\r\n                <button onClick ={this.increment} >点我加1</button>\r\n                <button onClick={this.unMount}>卸载组件</button>\r\n            </div>\r\n        )\r\n    }\r\n} \r\n\r\n\r\n//函数式组件\r\n/* function Demo(){\r\n    //Demo多次执行\r\n    const [count,setCount] = React.useState(0) //初始化只做一次\r\n\r\n    //加的回调\r\n    const increment = () => {\r\n        //setCount(count+1) //参数为非函数值\r\n        setCount(count =>  count+1)\r\n        \r\n    }\r\n   \r\n    React.useEffect(() => {\r\n        setInterval(() => {\r\n            setCount(count =>  count+1)\r\n        },1000)\r\n  \r\n    },[])\r\n    return (\r\n        <div>\r\n            <h1>当前求和为：{count} </h1>\r\n            <button onClick ={increment} >点我加1</button>\r\n            <button onClick={unMount}>卸载组件</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Demo \r\n */"]},"metadata":{},"sourceType":"module"}