{"ast":null,"code":"import React, { Component } from 'react';\n/* //类式组件\r\n export default class Demo extends Component {\r\n    state = {count:0}\r\n    increment  = () => {\r\n        //函数式setState\r\n        this.setState((state) => {\r\n            \r\n            return {count:state.count+1}\r\n\r\n        })\r\n        }\r\n        componentDidMount(){\r\n            setInterval(() => {\r\n                this.setState(state =>({count:state.count+1}))\r\n            },1000)\r\n        }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>当前求和为：{this.state.count} </h1>\r\n                <button onClick ={this.increment} >点我加1</button>\r\n            </div>\r\n        )\r\n    }\r\n}  */\n//函数式组件\n\n/* function Demo(){\r\n    //Demo多次执行\r\n    const [count,setCount] = React.useState(0) //初始化只做一次\r\n\r\n    //加的回调\r\n    const increment = () => {\r\n        //setCount(count+1) //参数为非函数值\r\n        setCount(count =>  count+1)\r\n        \r\n    }\r\n   \r\n    React.useEffect(() => {\r\n        setInterval(() => {\r\n            setCount(count =>  count+1)\r\n        },1000)\r\n  \r\n    },[])\r\n    return (\r\n        <div>\r\n            <h1>当前求和为：{count} </h1>\r\n            <button onClick ={increment} >点我加1</button>\r\n            <button onClick={unMount}>卸载组件</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Demo \r\n */","map":{"version":3,"sources":["C:/Users/FR/Desktop/react_extension/src/components/3_hooks/index.jsx"],"names":["React","Component"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from 'react'\r\n\r\n/* //类式组件\r\n export default class Demo extends Component {\r\n    state = {count:0}\r\n    increment  = () => {\r\n        //函数式setState\r\n        this.setState((state) => {\r\n            \r\n            return {count:state.count+1}\r\n\r\n        })\r\n        }\r\n        componentDidMount(){\r\n            setInterval(() => {\r\n                this.setState(state =>({count:state.count+1}))\r\n            },1000)\r\n        }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>当前求和为：{this.state.count} </h1>\r\n                <button onClick ={this.increment} >点我加1</button>\r\n            </div>\r\n        )\r\n    }\r\n}  */\r\n\r\n\r\n//函数式组件\r\n/* function Demo(){\r\n    //Demo多次执行\r\n    const [count,setCount] = React.useState(0) //初始化只做一次\r\n\r\n    //加的回调\r\n    const increment = () => {\r\n        //setCount(count+1) //参数为非函数值\r\n        setCount(count =>  count+1)\r\n        \r\n    }\r\n   \r\n    React.useEffect(() => {\r\n        setInterval(() => {\r\n            setCount(count =>  count+1)\r\n        },1000)\r\n  \r\n    },[])\r\n    return (\r\n        <div>\r\n            <h1>当前求和为：{count} </h1>\r\n            <button onClick ={increment} >点我加1</button>\r\n            <button onClick={unMount}>卸载组件</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Demo \r\n */"]},"metadata":{},"sourceType":"module"}