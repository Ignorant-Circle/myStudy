{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\FR\\\\Desktop\\\\react_extension\\\\src\\\\components\\\\3_hooks\\\\index.jsx\";\nimport React, { Component } from 'react'; //类式组件\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Demo extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      count: 0\n    };\n\n    this.increment = () => {\n      //函数式setState\n      this.setState(state => {\n        return {\n          count: state.count + 1\n        };\n      });\n    };\n  }\n\n  componentDidMount() {\n    setInterval(() => {\n      this.setState(state.count + 1);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"\\u5F53\\u524D\\u6C42\\u548C\\u4E3A\\uFF1A\", this.state.count, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.increment,\n        children: \"\\u70B9\\u6211\\u52A01\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n/* \r\n//函数式组件\r\nfunction Demo(){\r\n    //Demo多次执行\r\n    const [count,setCount] = React.useState(0) //初始化只做一次\r\n    const [name ,setName] = React.useState('tom')\r\n    //加的回调\r\n    const increment = () => {\r\n        //setCount(count+1) //参数为非函数值\r\n        setCount(count =>  count+1)\r\n        \r\n    }\r\n    const changeName = () => {\r\n        setName('jack')\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>当前求和为：{count} </h1>\r\n            <hr/>\r\n            <h1>我的名字是：{name}</h1>\r\n            <button onClick ={increment} >点我加1</button>\r\n            <button onClick ={changeName} >点我改名</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Demo \r\n*/","map":{"version":3,"sources":["C:/Users/FR/Desktop/react_extension/src/components/3_hooks/index.jsx"],"names":["React","Component","Demo","state","count","increment","setState","componentDidMount","setInterval","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CAEA;;;AACC,eAAe,MAAMC,IAAN,SAAmBD,SAAnB,CAA6B;AAAA;AAAA;AAAA,SACzCE,KADyC,GACjC;AAACC,MAAAA,KAAK,EAAC;AAAP,KADiC;;AAAA,SAEzCC,SAFyC,GAE5B,MAAM;AACf;AACA,WAAKC,QAAL,CAAeH,KAAD,IAAW;AAErB,eAAO;AAACC,UAAAA,KAAK,EAACD,KAAK,CAACC,KAAN,GAAY;AAAnB,SAAP;AAEH,OAJD;AAKC,KAToC;AAAA;;AAUrCG,EAAAA,iBAAiB,GAAE;AACfC,IAAAA,WAAW,CAAC,MAAM;AACd,WAAKF,QAAL,CAAcH,KAAK,CAACC,KAAN,GAAY,CAA1B;AAEH,KAHU,CAAX;AAIH;;AACLK,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI;AAAA,2DAAW,KAAKN,KAAL,CAAWC,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,OAAO,EAAG,KAAKC,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AAvBwC;AA0B7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from 'react'\r\n\r\n//类式组件\r\n export default class Demo extends Component {\r\n    state = {count:0}\r\n    increment  = () => {\r\n        //函数式setState\r\n        this.setState((state) => {\r\n            \r\n            return {count:state.count+1}\r\n\r\n        })\r\n        }\r\n        componentDidMount(){\r\n            setInterval(() => {\r\n                this.setState(state.count+1)\r\n                \r\n            })\r\n        }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>当前求和为：{this.state.count} </h1>\r\n                <button onClick ={this.increment} >点我加1</button>\r\n            </div>\r\n        )\r\n    }\r\n} \r\n\r\n/* \r\n//函数式组件\r\nfunction Demo(){\r\n    //Demo多次执行\r\n    const [count,setCount] = React.useState(0) //初始化只做一次\r\n    const [name ,setName] = React.useState('tom')\r\n    //加的回调\r\n    const increment = () => {\r\n        //setCount(count+1) //参数为非函数值\r\n        setCount(count =>  count+1)\r\n        \r\n    }\r\n    const changeName = () => {\r\n        setName('jack')\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>当前求和为：{count} </h1>\r\n            <hr/>\r\n            <h1>我的名字是：{name}</h1>\r\n            <button onClick ={increment} >点我加1</button>\r\n            <button onClick ={changeName} >点我改名</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Demo \r\n*/"]},"metadata":{},"sourceType":"module"}