{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\FR\\\\Desktop\\\\react_extension\\\\src\\\\components\\\\3_hooks\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Component } from 'react';\n/* //类式组件\r\n export default class Demo extends Component {\r\n    state = {count:0}\r\n    increment  = () => {\r\n        //函数式setState\r\n        this.setState((state) => {\r\n            \r\n            return {count:state.count+1}\r\n\r\n        })\r\n        }\r\n        componentDidMount(){\r\n            setInterval(() => {\r\n                this.setState(state =>({count:state.count+1}))\r\n            },1000)\r\n        }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>当前求和为：{this.state.count} </h1>\r\n                <button onClick ={this.increment} >点我加1</button>\r\n            </div>\r\n        )\r\n    }\r\n}  */\n//函数式组件\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Demo() {\n  _s();\n\n  //Demo多次执行\n  const [count, setCount] = React.useState(0); //初始化只做一次\n  //加的回调\n\n  const increment = () => {\n    //setCount(count+1) //参数为非函数值\n    setCount(count => count + 1);\n  };\n\n  React.useEffect(() => {\n    setInterval(() => {\n      setCount(count => count + 1);\n    }, 1000);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"\\u5F53\\u524D\\u6C42\\u548C\\u4E3A\\uFF1A\", count, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: increment,\n      children: \"\\u70B9\\u6211\\u52A01\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: unmount,\n      children: \"\\u5378\\u8F7D\\u7EC4\\u4EF6\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Demo, \"f6rNyXb4nKr8df0VUP2jADfsx6o=\");\n\n_c = Demo;\nexport default Demo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Demo\");","map":{"version":3,"sources":["C:/Users/FR/Desktop/react_extension/src/components/3_hooks/index.jsx"],"names":["React","Component","Demo","count","setCount","useState","increment","useEffect","setInterval","unmount"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;;;AACA,SAASC,IAAT,GAAe;AAAA;;AACX;AACA,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBJ,KAAK,CAACK,QAAN,CAAe,CAAf,CAAzB,CAFW,CAEgC;AAE3C;;AACA,QAAMC,SAAS,GAAG,MAAM;AACpB;AACAF,IAAAA,QAAQ,CAACD,KAAK,IAAKA,KAAK,GAAC,CAAjB,CAAR;AAEH,GAJD;;AAMAH,EAAAA,KAAK,CAACO,SAAN,CAAgB,MAAM;AAClBC,IAAAA,WAAW,CAAC,MAAM;AACdJ,MAAAA,QAAQ,CAACD,KAAK,IAAKA,KAAK,GAAC,CAAjB,CAAR;AACH,KAFU,EAET,IAFS,CAAX;AAIH,GALD,EAKE,EALF;AAMA,sBACI;AAAA,4BACI;AAAA,yDAAWA,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,OAAO,EAAGG,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAQ,MAAA,OAAO,EAAEG,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GAxBQP,I;;KAAAA,I;AA0BT,eAAeA,IAAf","sourcesContent":["import React, { Component } from 'react'\r\n\r\n/* //类式组件\r\n export default class Demo extends Component {\r\n    state = {count:0}\r\n    increment  = () => {\r\n        //函数式setState\r\n        this.setState((state) => {\r\n            \r\n            return {count:state.count+1}\r\n\r\n        })\r\n        }\r\n        componentDidMount(){\r\n            setInterval(() => {\r\n                this.setState(state =>({count:state.count+1}))\r\n            },1000)\r\n        }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>当前求和为：{this.state.count} </h1>\r\n                <button onClick ={this.increment} >点我加1</button>\r\n            </div>\r\n        )\r\n    }\r\n}  */\r\n\r\n\r\n//函数式组件\r\nfunction Demo(){\r\n    //Demo多次执行\r\n    const [count,setCount] = React.useState(0) //初始化只做一次\r\n\r\n    //加的回调\r\n    const increment = () => {\r\n        //setCount(count+1) //参数为非函数值\r\n        setCount(count =>  count+1)\r\n        \r\n    }\r\n   \r\n    React.useEffect(() => {\r\n        setInterval(() => {\r\n            setCount(count =>  count+1)\r\n        },1000)\r\n  \r\n    },[])\r\n    return (\r\n        <div>\r\n            <h1>当前求和为：{count} </h1>\r\n            <button onClick ={increment} >点我加1</button>\r\n            <button onClick={unmount}>卸载组件</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Demo \r\n"]},"metadata":{},"sourceType":"module"}