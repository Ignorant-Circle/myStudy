{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\FR\\\\Desktop\\\\react_extension\\\\src\\\\components\\\\8_ErrorBoundary\\\\Parent.jsx\";\nimport React, { Component } from 'react';\nimport Child from './Child';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Parent extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      hasError: {}\n    };\n  }\n\n  //当Parent 的子组件出现报错时，会触发getDerivedStateFromError的调用，并携带错误信息\n  static getDerivedStateFromError(error) {\n    console.log(error);\n    return {\n      hasError: error\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u6211\\u662Fparent\\u7EC4\\u4EF6\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Child, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/FR/Desktop/react_extension/src/components/8_ErrorBoundary/Parent.jsx"],"names":["React","Component","Child","Parent","state","hasError","getDerivedStateFromError","error","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AACA,eAAe,MAAMC,MAAN,SAAqBF,SAArB,CAA+B;AAAA;AAAA;AAAA,SAC1CG,KAD0C,GAClC;AACJC,MAAAA,QAAQ,EAAC;AADL,KADkC;AAAA;;AAI1C;AACiC,SAAxBC,wBAAwB,CAACC,KAAD,EAAO;AACnCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,WAAM;AAACF,MAAAA,QAAQ,EAACE;AAAV,KAAN;AAEH;;AACFG,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AAjByC","sourcesContent":["import React, { Component } from 'react'\r\nimport Child from './Child'\r\nexport default class Parent extends Component {\r\n    state = {\r\n        hasError:{}\r\n    }\r\n    //当Parent 的子组件出现报错时，会触发getDerivedStateFromError的调用，并携带错误信息\r\n     static  getDerivedStateFromError(error){\r\n         console.log(error);\r\n         return{hasError:error}\r\n         \r\n     }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>我是parent组件</h2>\r\n                <Child/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}