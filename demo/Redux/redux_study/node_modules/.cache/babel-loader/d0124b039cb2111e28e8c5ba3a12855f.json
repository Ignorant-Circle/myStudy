{"ast":null,"code":"//引入Count的UI组件\nimport CountUI from '../../components/Count'; //引入connect用于连接UI组件与redux\n\nimport { connect } from 'react-redux'; //引入action\n\nimport { createIncrementAction, createDecrementAction, createIncrementAsyncAction } from '../../redux/count_action';\n/**\r\n * 1.mapStateToProps函数返回的是一个对象\r\n * 2.返回对象中的key就作为传递给UI组件props的key，value就作为传递给UI组件的props的value\r\n * 3.mapStateToProps用于传递状态\r\n */\n\nconst mapStateToProps = state => ({\n  count: state\n});\n/**\r\n * 1.mapDispatchToProps函数返回的是一个对象\r\n * 2.返回对象中的key就作为传递给UI组件props的key，value就作为传递给UI组件的props的value\r\n * 3.mapDispatchToProps用于传递操作对象的方法\r\n */\n\n\nconst mapDispatchToProps = dispatch => ({\n  increment: number => //通知redux执行加法\n  dispatch(createIncrementAction(number)),\n  //通知redux执行减法\n  decrement: number => dispatch(createDecrementAction(number)),\n  //通知redux执行异步加法\n  incrementAsync: (number, time) => dispatch(createIncrementAsyncAction(number, time))\n}); //使用connect()()创建并暴露一个Count的容器组件\n\n\nexport default connect(state => ({\n  count: state\n}), mapDispatchToProps)(CountUI);","map":{"version":3,"sources":["C:/Users/FR/Desktop/react_study/src/containers/Count/index.jsx"],"names":["CountUI","connect","createIncrementAction","createDecrementAction","createIncrementAsyncAction","mapStateToProps","state","count","mapDispatchToProps","dispatch","increment","number","decrement","incrementAsync","time"],"mappings":"AAAA;AACA,OAAOA,OAAP,MAAoB,wBAApB,C,CACA;;AACA,SAAQC,OAAR,QAAsB,aAAtB,C,CACA;;AACA,SACIC,qBADJ,EAEIC,qBAFJ,EAGIC,0BAHJ,QAIO,0BAJP;AAMA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAACC,EAAAA,KAAK,EAACD;AAAP,CAAL,CAA7B;AAGA;AACA;AACA;AACA;AACA;;;AACA,MAAME,kBAAkB,GAAGC,QAAQ,KAC/B;AAACC,EAAAA,SAAS,EAAEC,MAAM,IACf;AACAF,EAAAA,QAAQ,CAACP,qBAAqB,CAACS,MAAD,CAAtB,CAFX;AAGG;AACAC,EAAAA,SAAS,EAACD,MAAM,IAChBF,QAAQ,CAACN,qBAAqB,CAACQ,MAAD,CAAtB,CALX;AAMI;AACDE,EAAAA,cAAc,EAAC,CAACF,MAAD,EAAQG,IAAR,KACfL,QAAQ,CAACL,0BAA0B,CAACO,MAAD,EAAQG,IAAR,CAA3B;AARX,CAD+B,CAAnC,C,CAaA;;;AACA,eAAgBb,OAAO,CAACK,KAAK,KAAK;AAACC,EAAAA,KAAK,EAACD;AAAP,CAAL,CAAN,EAA0BE,kBAA1B,CAAP,CAAqDR,OAArD,CAAhB","sourcesContent":["//引入Count的UI组件\r\nimport CountUI from '../../components/Count'\r\n//引入connect用于连接UI组件与redux\r\nimport {connect} from 'react-redux'\r\n//引入action\r\nimport {\r\n    createIncrementAction,\r\n    createDecrementAction,\r\n    createIncrementAsyncAction\r\n} from '../../redux/count_action'\r\n\r\n/**\r\n * 1.mapStateToProps函数返回的是一个对象\r\n * 2.返回对象中的key就作为传递给UI组件props的key，value就作为传递给UI组件的props的value\r\n * 3.mapStateToProps用于传递状态\r\n */\r\n\r\nconst mapStateToProps = state => ({count:state})\r\n\r\n\r\n/**\r\n * 1.mapDispatchToProps函数返回的是一个对象\r\n * 2.返回对象中的key就作为传递给UI组件props的key，value就作为传递给UI组件的props的value\r\n * 3.mapDispatchToProps用于传递操作对象的方法\r\n */\r\nconst mapDispatchToProps = dispatch =>(\r\n    {increment: number => \r\n       //通知redux执行加法\r\n       dispatch(createIncrementAction(number)),\r\n       //通知redux执行减法\r\n       decrement:number => \r\n       dispatch(createDecrementAction(number)),\r\n        //通知redux执行异步加法\r\n       incrementAsync:(number,time) => \r\n       dispatch(createIncrementAsyncAction(number,time)),\r\n  \r\n    })\r\n\r\n//使用connect()()创建并暴露一个Count的容器组件\r\nexport default  connect(state => ({count:state}),mapDispatchToProps)(CountUI)\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}