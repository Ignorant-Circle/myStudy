{"ast":null,"code":"//引入Count的UI组件\nimport CountUI from '../../components/Count'; //引入connect用于连接UI组件与redux\n\nimport { connect } from 'react-redux'; //引入action\n\nimport { createIncrementAction, createDecrementAction, createIncrementAsyncAction } from '../../redux/count_action';\n/**\r\n * 1.mapStateToProps函数返回的是一个对象\r\n * 2.返回对象中的key就作为传递给UI组件props的key，value就作为传递给UI组件的props的value\r\n * 3.mapStateToProps用于传递状态\r\n */\n\nfunction mapStateToProps(state) {\n  return {\n    count: state\n  };\n}\n/**\r\n * 1.mapDispatchToProps函数返回的是一个对象\r\n * 2.返回对象中的key就作为传递给UI组件props的key，value就作为传递给UI组件的props的value\r\n * 3.mapDispatchToProps用于传递操作对象的方法\r\n */\n\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    increment: number => //通知redux执行加法\n    dispatch(createIncrementAction(number)),\n    //通知redux执行减法\n    decrement: number => dispatch(createDecrementAction(number)),\n    //通知redux执行异步加法\n    createIncrementAsyncAction\n  };\n} //使用connect()()创建并暴露一个Count的容器组件\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CountUI);","map":{"version":3,"sources":["C:/Users/FR/Desktop/react_study/src/containers/Count/index.jsx"],"names":["CountUI","connect","createIncrementAction","createDecrementAction","createIncrementAsyncAction","mapStateToProps","state","count","mapDispatchToProps","dispatch","increment","number","decrement"],"mappings":"AAAA;AACA,OAAOA,OAAP,MAAoB,wBAApB,C,CACA;;AACA,SAAQC,OAAR,QAAsB,aAAtB,C,CACA;;AACA,SACIC,qBADJ,EAEIC,qBAFJ,EAGIC,0BAHJ,QAIO,0BAJP;AAMA;AACA;AACA;AACA;AACA;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC5B,SAAO;AAACC,IAAAA,KAAK,EAACD;AAAP,GAAP;AACH;AAED;AACA;AACA;AACA;AACA;;;AACA,SAASE,kBAAT,CAA4BC,QAA5B,EAAsC;AAClC,SAAM;AAACC,IAAAA,SAAS,EAAEC,MAAM,IACrB;AACAF,IAAAA,QAAQ,CAACP,qBAAqB,CAACS,MAAD,CAAtB,CAFL;AAGH;AACAC,IAAAA,SAAS,EAACD,MAAM,IAChBF,QAAQ,CAACN,qBAAqB,CAACQ,MAAD,CAAtB,CALL;AAMF;AACAP,IAAAA;AAPE,GAAN;AAUH,C,CACD;;;AACA,eAAgBH,OAAO,CAACI,eAAD,EAAiBG,kBAAjB,CAAP,CAA4CR,OAA5C,CAAhB","sourcesContent":["//引入Count的UI组件\r\nimport CountUI from '../../components/Count'\r\n//引入connect用于连接UI组件与redux\r\nimport {connect} from 'react-redux'\r\n//引入action\r\nimport {\r\n    createIncrementAction,\r\n    createDecrementAction,\r\n    createIncrementAsyncAction\r\n} from '../../redux/count_action'\r\n\r\n/**\r\n * 1.mapStateToProps函数返回的是一个对象\r\n * 2.返回对象中的key就作为传递给UI组件props的key，value就作为传递给UI组件的props的value\r\n * 3.mapStateToProps用于传递状态\r\n */\r\n\r\nfunction mapStateToProps(state) {\r\n    return {count:state}\r\n}\r\n\r\n/**\r\n * 1.mapDispatchToProps函数返回的是一个对象\r\n * 2.返回对象中的key就作为传递给UI组件props的key，value就作为传递给UI组件的props的value\r\n * 3.mapDispatchToProps用于传递操作对象的方法\r\n */\r\nfunction mapDispatchToProps(dispatch) {\r\n    return{increment: number => \r\n       //通知redux执行加法\r\n       dispatch(createIncrementAction(number)),\r\n       //通知redux执行减法\r\n       decrement:number => \r\n       dispatch(createDecrementAction(number)),\r\n        //通知redux执行异步加法\r\n        createIncrementAsyncAction\r\n  \r\n    }\r\n}\r\n//使用connect()()创建并暴露一个Count的容器组件\r\nexport default  connect(mapStateToProps,mapDispatchToProps)(CountUI)\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}